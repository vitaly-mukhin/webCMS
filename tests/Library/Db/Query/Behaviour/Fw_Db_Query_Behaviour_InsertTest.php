<?php

/**
 * Test class for Fw_Db_Query_Behaviour.
 * Generated by PHPUnit on 2011-11-23 at 02:06:43.
 */
class Fw_Db_Query_Behaviour_InsertTest extends PHPUnit_Framework_TestCase {

	/**
	 * @var Fw_Db_Query
	 */
	protected $object;

	/**
	 * 
	 */
	protected function setUp() {
		$this->object = Fw_Db::i()->query()->insert();
	}

	/**
	 * 
	 */
	protected function tearDown() {
		
	}

	/**
	 * @expectedException Fw_Exception_Db_Query 
	 */
	public function testSqlNonArrayFields() {
		$insert = $this->object->into('table_name', 'field')->getBehaviour();
		$this->assertEquals('INSERT INTO `table_name` ( `a`, `b` )', $insert->sql);
	}

	public function testSql() {
		$insert = $this->object->into('table_name', array('a', 'b'))->getBehaviour();
		$this->assertEquals('INSERT INTO `table_name` ( `a`, `b` )', $insert->sql);
	}

	public function testSqlSimple() {
		$insert = $this->object->into('table_name', array('a', 'b'))->values(array('a_value', 'b_value'))->getBehaviour();
		$this->assertEquals('INSERT INTO `table_name` ( `a`, `b` ) VALUES (?, ?)', $insert->sql);
	}

	public function testSqlMultiSimple() {
		$insert = $this->object->into('table_name', array('a', 'b'))->values(array('a_value', 'b_value'), array('a_value1', 'b_value1'))->getBehaviour();
		$this->assertEquals('INSERT INTO `table_name` ( `a`, `b` ) VALUES (?, ?), (?, ?)', $insert->sql);
		$this->assertEquals(array('a_value', 'b_value', 'a_value1', 'b_value1'), $insert->binds);
	}

	public function testSqlShort() {
		$obj = Fw_Db::i()->query()->insert('table_name', array('a' => 1, 'b' => 2));
		$this->assertEquals('INSERT INTO `table_name` ( `a`, `b` ) VALUES (?, ?)', $obj->sql);
		$this->assertEquals(array(1, 2), $obj->binds);
	}

	public function testSqlShort2() {
		$obj = Fw_Db::i()->query()->insert('table_name', array('a' => 'aa', 'b' => 'bb'));
		$this->assertEquals('INSERT INTO `table_name` ( `a`, `b` ) VALUES (?, ?)', $obj->sql);
		$this->assertEquals(array('aa', 'bb'), $obj->binds);
	}

}