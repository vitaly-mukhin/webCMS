<?php

/**
 * Test class for Fw_Logger.
 * Generated by PHPUnit on 2011-11-29 at 16:21:52.
 */
class Fw_Logger_DbTest extends PHPUnit_Framework_TestCase {

	/**
	 * @var Fw_Logger
	 */
	protected $object;
	
	protected static $db;
	
	public static function setUpBeforeClass() {
		parent::setUpBeforeClass();
		$config = new Fw_Config(PATH_CONFIG . DIRECTORY_SEPARATOR . 'config.php');
		self::$db = Fw_Db::i()->connect($config->db);
	}

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->object = new Fw_Logger_Db(self::$db, array(
			'table' => TBL_LOG
		));
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
		
	}
	
	public function testConstructor() {
		$this->assertNull($this->object->decorator);
		$this->assertNull($this->object->ababagalamaga);
	}
	
	public function testWrongDecorator() {
		$result = $this->object->setDecorator('aaaaaaa');
		$this->assertEquals($this->object, $result);
		$this->assertNull($this->object->decorator);
	}
	
	public function testDecorator() {
		$this->object->setDecorator(function(){});
		$this->assertTrue($this->object->decorator instanceof Closure);
	}
	
	public function testLogReturn() {
		$this->object->setDecorator(function($values){
			$result = array(
				'sql' => $values['sql'],
				'result' => 'empty line'
			);
			return $result;
		});
		$log_result = $this->object->log(array('sql'=>'aaaaaaa'));
		$this->assertTrue($log_result instanceof Fw_Db_Query);
		$this->assertTrue($log_result->getBehaviour() instanceof Fw_Db_Query_Behaviour_Insert);
		$this->assertEquals('INSERT INTO `'.TBL_LOG.'` ( `sql`, `result` ) VALUES (?, ?)', $log_result->sql);
		$this->assertEquals(array('aaaaaaa', 'empty line'), $log_result->binds);
	}
	
	public function testPush() {
		$this->object->setDecorator(function($values){
			$result = array(
				'sql' => $values['sql'],
				'duration' => $values['duration'],
				'result' => 'empty line'
			);
			return $result;
		});
		$this->assertGreaterThan(0, (int)$this->object->push(array('sql'=>'aaaaaaa', 'duration'=>5)));
	}
	
}